# Test cases for matrix_divided function

# Test case 1: Dividing each element by 2
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

# Test case 2: Dividing each element by 3
>>> matrix = [[10, 20, 30], [40, 50, 60], [70, 80, 90]]
>>> matrix_divided(matrix, 3)
[[3.33, 6.67, 10.0], [13.33, 16.67, 20.0], [23.33, 26.67, 30.0]]

# Test case 3: Invalid input (string in matrix)
>>> matrix = [[1, 2, 'three'], [4, 5, 6], [7, 8, 9]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case 4: Invalid input (matrix with different row sizes)
>>> matrix = [[1, 2, 3], [4, 5], [7, 8, 9]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

# Test case 5: Invalid input (divisor is not a number)
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> matrix_divided(matrix, 'two')
Traceback (most recent call last):
...
TypeError: div must be a number

# Test case 6: Invalid input (divisor is 0)
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
